import Head from 'next/head';
import { Component } from 'react';
import { ComponentsSection } from '../components/components';
import { Hero } from '../components/hero';
import { LogsSection } from '../components/logs';
import { StepsSection } from '../components/steps';
import { Api } from '../core/api';
import { Danny, DannySetup } from '../core/danny';
import { Installation } from '../core/installation';
import { Step } from '../core/step';

export interface HomeProps {}
export interface HomeState {
  danny: Danny;
  setup: DannySetup;
  activeStep?: number;
}

export default class Home extends Component<HomeProps, HomeState> {
  // apiBase = 'http://localhost:3000/api/v1';
  constructor(props: HomeProps) {
    super(props);

    this.state = {
      danny: {},
      setup: {
        steps: [],
      },
    };
  }

  startPolling() {
    const poll = () => {
      Installation.poller().then((danny) => {
        this.setState({
          danny,
        });

        setTimeout(() => poll(), 250);
      });
    };

    poll();
  }

  connectToInstallation() {
    Installation.connect().then(() => this.startPolling());
  }

  startInstallation() {
    const processStep = (index: number) => {
      const { setup } = this.state;

      this.setState({
        activeStep: index,
      });
      const currentStep = setup.steps[index];

      if (!currentStep) {
        return;
      }

      console.log('Current Ste', currentStep);
      currentStep.execute(this.state.danny).then(() => processStep(index + 1));
    };

    processStep(0);
  }

  componentDidMount() {
    Api.invoke<Danny>('/danny').then((danny) => this.setState({ danny }));
    Api.invoke<DannySetup>('/danny/setup').then((setup) =>
      this.setState({
        setup: {
          steps: setup.steps.map((step) => new Step(step)),
        },
        activeStep: -1,
      })
    );
  }

  render() {
    const { danny, setup } = this.state;

    return (
      <>
        <Head>
          <title>Danny The Dinosaur</title>
          <meta name='description' content='Generated by create next app' />
          <link rel='icon' href='/favicon.ico' />
        </Head>
        <div className='page w-3/4 mx-auto mt-16'>
          <Hero
            danny={this.state.danny}
            onConnect={() => this.connectToInstallation()}
            onStart={() => this.startInstallation()}
          ></Hero>

          <div className='flex'>
            <ComponentsSection
              components={danny.components}
            ></ComponentsSection>

            <StepsSection
              steps={setup.steps}
              danny={this.state.danny}
              activeStep={this.state.activeStep}
            ></StepsSection>
          </div>

          <LogsSection logs={this.state.danny.logs}></LogsSection>
        </div>
      </>
    );
  }
}
